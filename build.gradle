apply plugin: 'java'
apply plugin: 'application'

version "0.1.2-SNAPSHOT"

repositories {
  jcenter()
}

mainClassName = "com.teambition.kafka.admin.Main"

dependencies {
  compile 'org.slf4j:slf4j-api:1.7.21'

  compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.0.v20161208'
  compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.4.0.v20161208'

  compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.25'
  compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: '2.25'
  compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version: '2.25'
  compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.25'

  compile group: 'org.influxdb', name: 'influxdb-java', version: '2.5'

  compile group: 'org.apache.kafka', name: 'kafka_2.11', version: '0.10.1.1'

  testCompile 'junit:junit:4.12'
}

task createVersion(dependsOn: processResources) << {
  new File("$buildDir/resources/main/version.properties").withWriter { w ->
    Properties p = new Properties()
    p['version'] = project.version.toString()
//    p['timestamp'] = project
    p.store w, null
  }
}

classes {
  dependsOn createVersion
}

tasks.withType(Tar) {
  compression = Compression.GZIP
}

task dev22(type: JavaExec) {
  main = mainClassName
  classpath = sourceSets.main.runtimeClasspath
  args = ['config/development22.properties']
}

task sampleProducer(type: JavaExec) {
  main = 'demo.SampleProducer'
  classpath = sourceSets.main.runtimeClasspath
}

task sampleConsumer(type: JavaExec) {
  main = 'demo.SampleConsumer'
  classpath = sourceSets.main.runtimeClasspath
}
